#ifndef _ERROR_HANDLER_
#define _ERROR_HANDLER_

#define NO_LINE -1 /* IF THE ERROR ACCOURED IN NOT PARTICULAR LINE */

enum error_code
{
	/* FOR UNEXPEXTED BEHVIOR */
	UNKNOWN = 0,

	/* SUCCESSFUL EXIT - NO ERROR */
	SUCCESSFUL = 1,
	
	/* FILE ERROR */
	FILE_NOT_GIVEN,
	FILE_NAME_EXCEEDED,
	FILE_UNABLE_TO_OPEN,
	FILE_UNABLE_TO_CREATE,
	FILE_NOT_EXIST,
	FILE_WRONG_EXTENTION,

	/* INSTRUCTION ERRORS */
	INSTRUCTION_INVALID_STRING,
	INSTRUCTION_NOT_EXIST,
	INSTRUCTION_MISSING_ARGS,
	INSTRUCTION_INVALID_DATA,
	INSTRUCTION_INVALID_DATA_SYNTAX,
	INSTRUCTION_EXTERN_MISSING_LABEL,
	INSTRUCTION_EXTERN_INVALID_LABEL,
	INSTRUCTION_ENTRY_MISSING_LABEL,
	INSTRUCTION_ENTRY_INVALID_LABEL,

	/* COMMAND ERRORS */
	COMMAND_NOT_EXIST,
	COMMAND_INVALID_ARGS,
	COMMAND_INVALID_FORMAT_ARGS,
	COMMAND_EXCEEDS_ARGS,
	COMMAND_EXPECT_ZERO_ARGS,
	COMMAND_EXPECT_ONE_ARGS,
	COMMAND_EXPECT_TWO_ARGS,
	COMMAND_SRC_ARG_INVALID,
	COMMAND_DES_ARG_INVALID,

	/* REGISTER ERRORS */
	REGISTER_NOT_EXIST,

	/* LABEL ERRORS */
	LABEL_IS_INSTRUCTION,
	LABEL_IS_COMMAND,
	LABEL_IS_REGISTER,
	LABEL_ALREADY_EXISTS,
	LABEL_EXCEEDS_LENGTH,
	LABEL_FIRST_CHAR_NOT_ALPHA,
	LABEL_INVALID_FORMAT,
	LABEL_UNRECOGNIZED,
	LABEL_EMPTY,

	/* MEMORY ALLOCATION ERROR */
	UNABLE_TO_ALLOCATE_MEMORY,
	RUN_OUT_MEMORY,

	/* EXTRA */
	LINE_EXCEEDS_LENGTH,
	LINE_MISSING_BODY

};

void call_error(int ec,int line);
void exiting_msg();

#endif /* _ERROR_HANDLER_ */